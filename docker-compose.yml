version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: chronoscope-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - MODEL_CACHE_DIR=/app/models
    volumes:
      - ./backend:/app
      - model-cache:/app/models
    networks:
      - chronoscope-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chronoscope-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - chronoscope-network
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: chronoscope-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - chronoscope-network
    depends_on:
      - frontend
      - backend

networks:
  chronoscope-network:
    driver: bridge

volumes:
  model-cache: